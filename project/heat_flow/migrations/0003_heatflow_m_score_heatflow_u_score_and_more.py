# Generated by Django 5.1.6 on 2025-08-11 13:28

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("heat_flow", "0002_alter_heatflow_date_acquired_and_more"),
    ]

    operations = [
        migrations.AddField(
            model_name="heatflow",
            name="M_score",
            field=models.CharField(
                choices=[
                    ("M1", "Excellent"),
                    ("M2", "Good"),
                    ("M3", "Acceptable"),
                    ("M4", "Poor"),
                    ("Mx", "Not determined / missing data"),
                ],
                default="Mx",
                help_text="Methodological quality of the heat-flow value, as defined in Fuchs et al. (2023). M1 = Excellent, M2 = Good, M3 = Ok, M4 = Poor, Mx = not determined / missing data.",
                max_length=2,
                verbose_name="M-score",
            ),
        ),
        migrations.AddField(
            model_name="heatflow",
            name="U_score",
            field=models.CharField(
                choices=[
                    ("U1", "Excellent"),
                    ("U2", "Good"),
                    ("U3", "Acceptable"),
                    ("U4", "Poor"),
                    ("Ux", "Not determined / missing data"),
                ],
                default="Ux",
                help_text="Numerical uncertainty of the heat-flow value, as defined in Fuchs et al. (2023). U1 = Excellent, U2 = Good, U3 = Ok, U4 = Poor, Ux = not determined / missing data.",
                max_length=2,
                verbose_name="U-score",
            ),
        ),
        migrations.AddField(
            model_name="thermalgradient",
            name="score",
            field=models.FloatField(
                default=1.0,
                help_text="Score of the temperature gradient measurement, ranging from 0.0 to 1.0. A score of 1.0 indicates a high-quality measurement, while a score of 0.0 indicates a low-quality measurement.",
                validators=[
                    django.core.validators.MinValueValidator(0.0),
                    django.core.validators.MaxValueValidator(1.0),
                ],
                verbose_name="T-score",
            ),
        ),
    ]
