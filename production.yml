# SEE: docs.fairdm/deployment
version: "3.7"
name: ghfdb_production

volumes:
  postgres:
  media:

# The Traefik reverse-proxy service and "traefik" network is defined by the GFZ IT team in a seperate Portainer
# stack.
networks:
  default:
    external: true  # Set the external network as the default
    name: traefik  # The name of the external network

services:
  django: &django
    image: django
    restart: always
    pull_policy: build
    command: start-django
    build:
      context: .
      dockerfile: ./deploy/production
    depends_on:
      - postgres
      - redis
    env_file:
      - deploy/config/.postgres
      - deploy/config/.django
      - deploy/config/.minio
      - stack.env
    labels:
      - traefik.enable=true
      - traefik.http.routers.django.rule=Host(`${DJANGO_SITE_DOMAIN:-localhost}`)
      - traefik.http.routers.django.entrypoints=https
      - traefik.http.routers.django.tls=true                   # Enable TLS for this service
      - traefik.http.routers.django.tls.certresolver=sectigo  # Specify the certificate resolver
      - traefik.http.routers.django.tls.domains[0].main=ghfdb.gfz-potsdam.de
      - traefik.http.services.django.loadbalancer.server.port=5000
      - traefik.http.middlewares.csrf.headers.hostsProxyHeaders=X-CSRFToken
  postgres:
    image: postgres:16-alpine
    restart: always
    volumes:
      - postgres:/var/lib/postgresql/data
    env_file:
      - deploy/config/.postgres
      - stack.env
  redis:
    image: redis:6
    restart: always
  celeryworker:
    <<: *django
    command: start-celeryworker
    labels: []
  celerybeat:
    <<: *django
    command: start-celerybeat
    labels: []
  flower:
    <<: *django
    command: start-flower
    labels:
      - traefik.enable=true
      - traefik.http.routers.tasks.rule=Host(`tasks.${DJANGO_SITE_DOMAIN:-localhost}`)
      - traefik.http.routers.tasks.entrypoints=https
      - traefik.http.routers.tasks.service=tasks
      - traefik.http.routers.tasks.tls.domains[0].main=ghfdb.gfz-potsdam.de
      - traefik.http.services.tasks.loadbalancer.server.port=5555
  # # TDU map service
  # map:
  #   image: tanzwutgandalf/whfdb-map:latest
  #   restart: always
  #   pull_policy: always
  #   environment:
  #     - VITE_ROOT_API_DOMAIN=${DJANGO_SITE_DOMAIN}
  #     - VITE_APP_NAME=Global Heat Flow Database
  #     - SUBDIR=/map
  #   labels:
  #     - traefik.enable=true
  #     - traefik.http.routers.map.entrypoints=https
  #     - traefik.http.routers.map.rule=Host(`${DJANGO_SITE_DOMAIN:-localhost}`) && PathPrefix(`/map`)
  #     - traefik.http.services.map.loadbalancer.server.port=80
  #     - traefik.http.routers.map.tls.certresolver=sectigo  # Specify the certificate resolver
  #     - traefik.http.routers.map.tls.domains[0].main=ghfdb.gfz-potsdam.de